# typed: strong

module WhopSDK
  module Resources
    class AppBuilds
      # Creates a new app build
      #
      # Required permissions:
      #
      # - `developer:manage_builds`
      sig do
        params(
          attachment: WhopSDK::AppBuildCreateParams::Attachment::OrHash,
          checksum: String,
          platform: WhopSDK::AppBuildPlatforms::OrSymbol,
          app_id: T.nilable(String),
          supported_app_view_types:
            T.nilable(T::Array[WhopSDK::AppViewType::OrSymbol]),
          request_options: WhopSDK::RequestOptions::OrHash
        ).returns(WhopSDK::AppBuild)
      end
      def create(
        # Input for an attachment
        attachment:,
        # Checksum of the app build file. This is generated by the client and used to
        # verify the integrity of the file that is submitted when un-packaged later on a
        # device.
        checksum:,
        # The platform of the app build (ios, android, web)
        platform:,
        # The ID of the app to create a build for. By default the current app from the api
        # key is used.
        app_id: nil,
        # Supported app view types for the app build. A build can specify multiple view
        # types, but should only specify ones that its code supports.
        supported_app_view_types: nil,
        request_options: {}
      )
      end

      # Retrieves an app build by ID
      #
      # Required permissions:
      #
      # - `developer:manage_builds`
      sig do
        params(
          id: String,
          request_options: WhopSDK::RequestOptions::OrHash
        ).returns(WhopSDK::AppBuild)
      end
      def retrieve(id, request_options: {})
      end

      # Lists app builds for an app
      #
      # Required permissions:
      #
      # - `developer:manage_builds`
      sig do
        params(
          app_id: String,
          after: T.nilable(String),
          before: T.nilable(String),
          first: T.nilable(Integer),
          last: T.nilable(Integer),
          platform: T.nilable(WhopSDK::AppBuildPlatforms::OrSymbol),
          status: T.nilable(WhopSDK::AppBuildStatuses::OrSymbol),
          request_options: WhopSDK::RequestOptions::OrHash
        ).returns(
          WhopSDK::Internal::CursorPage[WhopSDK::Models::AppBuildListResponse]
        )
      end
      def list(
        # The ID of the app to filter app builds by
        app_id:,
        # Returns the elements in the list that come after the specified cursor.
        after: nil,
        # Returns the elements in the list that come before the specified cursor.
        before: nil,
        # Returns the first _n_ elements from the list.
        first: nil,
        # Returns the last _n_ elements from the list.
        last: nil,
        # The different platforms an app build can target.
        platform: nil,
        # The different statuses an AppBuild can be in.
        status: nil,
        request_options: {}
      )
      end

      # Promotes an app build to production
      #
      # Required permissions:
      #
      # - `developer:manage_builds`
      sig do
        params(
          id: String,
          request_options: WhopSDK::RequestOptions::OrHash
        ).returns(WhopSDK::AppBuild)
      end
      def promote(id, request_options: {})
      end

      # @api private
      sig { params(client: WhopSDK::Client).returns(T.attached_class) }
      def self.new(client:)
      end
    end
  end
end
