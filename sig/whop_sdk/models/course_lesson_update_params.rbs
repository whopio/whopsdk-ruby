module WhopSDK
  module Models
    type course_lesson_update_params =
      {
        assessment_completion_requirement: WhopSDK::CourseLessonUpdateParams::AssessmentCompletionRequirement?,
        assessment_questions: ::Array[WhopSDK::CourseLessonUpdateParams::AssessmentQuestion]?,
        attachments: ::Array[WhopSDK::Models::CourseLessonUpdateParams::attachment]?,
        content: String?,
        days_from_course_start_until_unlock: Integer?,
        lesson_type: WhopSDK::Models::lesson_types?,
        main_pdf: WhopSDK::Models::CourseLessonUpdateParams::main_pdf?,
        max_attempts: Integer?,
        mux_asset_id: String?,
        title: String?,
        visibility: WhopSDK::Models::lesson_visibilities?
      }
      & WhopSDK::Internal::Type::request_parameters

    class CourseLessonUpdateParams < WhopSDK::Internal::Type::BaseModel
      extend WhopSDK::Internal::Type::RequestParameters::Converter
      include WhopSDK::Internal::Type::RequestParameters

      attr_accessor assessment_completion_requirement: WhopSDK::CourseLessonUpdateParams::AssessmentCompletionRequirement?

      attr_accessor assessment_questions: ::Array[WhopSDK::CourseLessonUpdateParams::AssessmentQuestion]?

      attr_accessor attachments: ::Array[WhopSDK::Models::CourseLessonUpdateParams::attachment]?

      attr_accessor content: String?

      attr_accessor days_from_course_start_until_unlock: Integer?

      attr_accessor lesson_type: WhopSDK::Models::lesson_types?

      attr_accessor main_pdf: WhopSDK::Models::CourseLessonUpdateParams::main_pdf?

      attr_accessor max_attempts: Integer?

      attr_accessor mux_asset_id: String?

      attr_accessor title: String?

      attr_accessor visibility: WhopSDK::Models::lesson_visibilities?

      def initialize: (
        ?assessment_completion_requirement: WhopSDK::CourseLessonUpdateParams::AssessmentCompletionRequirement?,
        ?assessment_questions: ::Array[WhopSDK::CourseLessonUpdateParams::AssessmentQuestion]?,
        ?attachments: ::Array[WhopSDK::Models::CourseLessonUpdateParams::attachment]?,
        ?content: String?,
        ?days_from_course_start_until_unlock: Integer?,
        ?lesson_type: WhopSDK::Models::lesson_types?,
        ?main_pdf: WhopSDK::Models::CourseLessonUpdateParams::main_pdf?,
        ?max_attempts: Integer?,
        ?mux_asset_id: String?,
        ?title: String?,
        ?visibility: WhopSDK::Models::lesson_visibilities?,
        ?request_options: WhopSDK::request_opts
      ) -> void

      def to_hash: -> {
        assessment_completion_requirement: WhopSDK::CourseLessonUpdateParams::AssessmentCompletionRequirement?,
        assessment_questions: ::Array[WhopSDK::CourseLessonUpdateParams::AssessmentQuestion]?,
        attachments: ::Array[WhopSDK::Models::CourseLessonUpdateParams::attachment]?,
        content: String?,
        days_from_course_start_until_unlock: Integer?,
        lesson_type: WhopSDK::Models::lesson_types?,
        main_pdf: WhopSDK::Models::CourseLessonUpdateParams::main_pdf?,
        max_attempts: Integer?,
        mux_asset_id: String?,
        title: String?,
        visibility: WhopSDK::Models::lesson_visibilities?,
        request_options: WhopSDK::RequestOptions
      }

      type assessment_completion_requirement =
        { minimum_grade_percent: Float?, minimum_questions_correct: Integer? }

      class AssessmentCompletionRequirement < WhopSDK::Internal::Type::BaseModel
        attr_accessor minimum_grade_percent: Float?

        attr_accessor minimum_questions_correct: Integer?

        def initialize: (
          ?minimum_grade_percent: Float?,
          ?minimum_questions_correct: Integer?
        ) -> void

        def to_hash: -> {
          minimum_grade_percent: Float?,
          minimum_questions_correct: Integer?
        }
      end

      type assessment_question =
        {
          correct_answer: String,
          question_text: String,
          question_type: WhopSDK::Models::assessment_question_types,
          id: String?,
          image: WhopSDK::Models::CourseLessonUpdateParams::AssessmentQuestion::image?,
          options: ::Array[WhopSDK::CourseLessonUpdateParams::AssessmentQuestion::Option]?
        }

      class AssessmentQuestion < WhopSDK::Internal::Type::BaseModel
        attr_accessor correct_answer: String

        attr_accessor question_text: String

        attr_accessor question_type: WhopSDK::Models::assessment_question_types

        attr_accessor id: String?

        attr_accessor image: WhopSDK::Models::CourseLessonUpdateParams::AssessmentQuestion::image?

        attr_accessor options: ::Array[WhopSDK::CourseLessonUpdateParams::AssessmentQuestion::Option]?

        def initialize: (
          correct_answer: String,
          question_text: String,
          question_type: WhopSDK::Models::assessment_question_types,
          ?id: String?,
          ?image: WhopSDK::Models::CourseLessonUpdateParams::AssessmentQuestion::image?,
          ?options: ::Array[WhopSDK::CourseLessonUpdateParams::AssessmentQuestion::Option]?
        ) -> void

        def to_hash: -> {
          correct_answer: String,
          question_text: String,
          question_type: WhopSDK::Models::assessment_question_types,
          id: String?,
          image: WhopSDK::Models::CourseLessonUpdateParams::AssessmentQuestion::image?,
          options: ::Array[WhopSDK::CourseLessonUpdateParams::AssessmentQuestion::Option]?
        }

        type image =
          WhopSDK::CourseLessonUpdateParams::AssessmentQuestion::Image::AttachmentInputWithDirectUploadID
          | WhopSDK::CourseLessonUpdateParams::AssessmentQuestion::Image::AttachmentInputWithID

        module Image
          extend WhopSDK::Internal::Type::Union

          type attachment_input_with_direct_upload_id =
            { direct_upload_id: String }

          class AttachmentInputWithDirectUploadID < WhopSDK::Internal::Type::BaseModel
            attr_accessor direct_upload_id: String

            def initialize: (direct_upload_id: String) -> void

            def to_hash: -> { direct_upload_id: String }
          end

          type attachment_input_with_id = { id: String }

          class AttachmentInputWithID < WhopSDK::Internal::Type::BaseModel
            attr_accessor id: String

            def initialize: (id: String) -> void

            def to_hash: -> { id: String }
          end

          def self?.variants: -> ::Array[WhopSDK::Models::CourseLessonUpdateParams::AssessmentQuestion::image]
        end

        type option = { is_correct: bool, option_text: String, id: String? }

        class Option < WhopSDK::Internal::Type::BaseModel
          attr_accessor is_correct: bool

          attr_accessor option_text: String

          attr_accessor id: String?

          def initialize: (
            is_correct: bool,
            option_text: String,
            ?id: String?
          ) -> void

          def to_hash: -> { is_correct: bool, option_text: String, id: String? }
        end
      end

      type attachment =
        WhopSDK::CourseLessonUpdateParams::Attachment::AttachmentInputWithDirectUploadID
        | WhopSDK::CourseLessonUpdateParams::Attachment::AttachmentInputWithID

      module Attachment
        extend WhopSDK::Internal::Type::Union

        type attachment_input_with_direct_upload_id =
          { direct_upload_id: String }

        class AttachmentInputWithDirectUploadID < WhopSDK::Internal::Type::BaseModel
          attr_accessor direct_upload_id: String

          def initialize: (direct_upload_id: String) -> void

          def to_hash: -> { direct_upload_id: String }
        end

        type attachment_input_with_id = { id: String }

        class AttachmentInputWithID < WhopSDK::Internal::Type::BaseModel
          attr_accessor id: String

          def initialize: (id: String) -> void

          def to_hash: -> { id: String }
        end

        def self?.variants: -> ::Array[WhopSDK::Models::CourseLessonUpdateParams::attachment]
      end

      type main_pdf =
        WhopSDK::CourseLessonUpdateParams::MainPdf::AttachmentInputWithDirectUploadID
        | WhopSDK::CourseLessonUpdateParams::MainPdf::AttachmentInputWithID

      module MainPdf
        extend WhopSDK::Internal::Type::Union

        type attachment_input_with_direct_upload_id =
          { direct_upload_id: String }

        class AttachmentInputWithDirectUploadID < WhopSDK::Internal::Type::BaseModel
          attr_accessor direct_upload_id: String

          def initialize: (direct_upload_id: String) -> void

          def to_hash: -> { direct_upload_id: String }
        end

        type attachment_input_with_id = { id: String }

        class AttachmentInputWithID < WhopSDK::Internal::Type::BaseModel
          attr_accessor id: String

          def initialize: (id: String) -> void

          def to_hash: -> { id: String }
        end

        def self?.variants: -> ::Array[WhopSDK::Models::CourseLessonUpdateParams::main_pdf]
      end
    end
  end
end
