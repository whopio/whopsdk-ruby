module WhopSDK
  module Models
    type experience_update_params =
      {
        access_level: WhopSDK::Models::ExperienceUpdateParams::access_level?,
        logo: WhopSDK::ExperienceUpdateParams::Logo?,
        name: String?,
        order: String?,
        section_id: String?
      }
      & WhopSDK::Internal::Type::request_parameters

    class ExperienceUpdateParams < WhopSDK::Internal::Type::BaseModel
      extend WhopSDK::Internal::Type::RequestParameters::Converter
      include WhopSDK::Internal::Type::RequestParameters

      attr_accessor access_level: WhopSDK::Models::ExperienceUpdateParams::access_level?

      attr_accessor logo: WhopSDK::ExperienceUpdateParams::Logo?

      attr_accessor name: String?

      attr_accessor order: String?

      attr_accessor section_id: String?

      def initialize: (
        ?access_level: WhopSDK::Models::ExperienceUpdateParams::access_level?,
        ?logo: WhopSDK::ExperienceUpdateParams::Logo?,
        ?name: String?,
        ?order: String?,
        ?section_id: String?,
        ?request_options: WhopSDK::request_opts
      ) -> void

      def to_hash: -> {
        access_level: WhopSDK::Models::ExperienceUpdateParams::access_level?,
        logo: WhopSDK::ExperienceUpdateParams::Logo?,
        name: String?,
        order: String?,
        section_id: String?,
        request_options: WhopSDK::RequestOptions
      }

      type access_level = :public | :private

      module AccessLevel
        extend WhopSDK::Internal::Type::Enum

        PUBLIC: :public
        PRIVATE: :private

        def self?.values: -> ::Array[WhopSDK::Models::ExperienceUpdateParams::access_level]
      end

      type logo = { id: String?, direct_upload_id: String? }

      class Logo < WhopSDK::Internal::Type::BaseModel
        attr_accessor id: String?

        attr_accessor direct_upload_id: String?

        def initialize: (?id: String?, ?direct_upload_id: String?) -> void

        def to_hash: -> { id: String?, direct_upload_id: String? }
      end
    end
  end
end
