module WhopSDK
  module Models
    type transfer =
      {
        id: String,
        amount: Float,
        created_at: Time,
        currency: WhopSDK::Models::currency,
        destination: WhopSDK::Models::Transfer::destination?,
        destination_ledger_account_id: String,
        fee_amount: Float?,
        notes: String?,
        origin: WhopSDK::Models::Transfer::origin?,
        origin_ledger_account_id: String
      }

    class Transfer < WhopSDK::Internal::Type::BaseModel
      attr_accessor id: String

      attr_accessor amount: Float

      attr_accessor created_at: Time

      attr_accessor currency: WhopSDK::Models::currency

      attr_accessor destination: WhopSDK::Models::Transfer::destination?

      attr_accessor destination_ledger_account_id: String

      attr_accessor fee_amount: Float?

      attr_accessor notes: String?

      attr_accessor origin: WhopSDK::Models::Transfer::origin?

      attr_accessor origin_ledger_account_id: String

      def initialize: (
        id: String,
        amount: Float,
        created_at: Time,
        currency: WhopSDK::Models::currency,
        destination: WhopSDK::Models::Transfer::destination?,
        destination_ledger_account_id: String,
        fee_amount: Float?,
        notes: String?,
        origin: WhopSDK::Models::Transfer::origin?,
        origin_ledger_account_id: String
      ) -> void

      def to_hash: -> {
        id: String,
        amount: Float,
        created_at: Time,
        currency: WhopSDK::Models::currency,
        destination: WhopSDK::Models::Transfer::destination?,
        destination_ledger_account_id: String,
        fee_amount: Float?,
        notes: String?,
        origin: WhopSDK::Models::Transfer::origin?,
        origin_ledger_account_id: String
      }

      type destination =
        (WhopSDK::Transfer::Destination::User
        | WhopSDK::Transfer::Destination::Company)?

      module Destination
        extend WhopSDK::Internal::Type::Union

        type user =
          { id: String, name: String?, typename: :User, username: String }

        class User < WhopSDK::Internal::Type::BaseModel
          attr_accessor id: String

          attr_accessor name: String?

          attr_accessor typename: :User

          attr_accessor username: String

          def initialize: (
            id: String,
            name: String?,
            username: String,
            ?typename: :User
          ) -> void

          def to_hash: -> {
            id: String,
            name: String?,
            typename: :User,
            username: String
          }
        end

        type company =
          { id: String, route: String, title: String, typename: :Company }

        class Company < WhopSDK::Internal::Type::BaseModel
          attr_accessor id: String

          attr_accessor route: String

          attr_accessor title: String

          attr_accessor typename: :Company

          def initialize: (
            id: String,
            route: String,
            title: String,
            ?typename: :Company
          ) -> void

          def to_hash: -> {
            id: String,
            route: String,
            title: String,
            typename: :Company
          }
        end

        def self?.variants: -> ::Array[WhopSDK::Models::Transfer::destination]
      end

      type origin =
        (WhopSDK::Transfer::Origin::User | WhopSDK::Transfer::Origin::Company)?

      module Origin
        extend WhopSDK::Internal::Type::Union

        type user =
          { id: String, name: String?, typename: :User, username: String }

        class User < WhopSDK::Internal::Type::BaseModel
          attr_accessor id: String

          attr_accessor name: String?

          attr_accessor typename: :User

          attr_accessor username: String

          def initialize: (
            id: String,
            name: String?,
            username: String,
            ?typename: :User
          ) -> void

          def to_hash: -> {
            id: String,
            name: String?,
            typename: :User,
            username: String
          }
        end

        type company =
          { id: String, route: String, title: String, typename: :Company }

        class Company < WhopSDK::Internal::Type::BaseModel
          attr_accessor id: String

          attr_accessor route: String

          attr_accessor title: String

          attr_accessor typename: :Company

          def initialize: (
            id: String,
            route: String,
            title: String,
            ?typename: :Company
          ) -> void

          def to_hash: -> {
            id: String,
            route: String,
            title: String,
            typename: :Company
          }
        end

        def self?.variants: -> ::Array[WhopSDK::Models::Transfer::origin]
      end
    end
  end
end
