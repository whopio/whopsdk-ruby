module WhopSDK
  module Resources
    class CourseLessons
      def create: (
        chapter_id: String,
        lesson_type: WhopSDK::Models::lesson_types,
        ?content: String?,
        ?days_from_course_start_until_unlock: Integer?,
        ?title: String?,
        ?request_options: WhopSDK::request_opts
      ) -> WhopSDK::Lesson

      def retrieve: (
        String id,
        ?request_options: WhopSDK::request_opts
      ) -> WhopSDK::Lesson

      def update: (
        String id,
        ?assessment_completion_requirement: WhopSDK::CourseLessonUpdateParams::AssessmentCompletionRequirement?,
        ?assessment_questions: ::Array[WhopSDK::CourseLessonUpdateParams::AssessmentQuestion]?,
        ?attachments: ::Array[WhopSDK::CourseLessonUpdateParams::Attachment]?,
        ?content: String?,
        ?days_from_course_start_until_unlock: Integer?,
        ?lesson_type: WhopSDK::Models::lesson_types?,
        ?main_pdf: WhopSDK::CourseLessonUpdateParams::MainPdf?,
        ?mux_asset_id: String?,
        ?title: String?,
        ?visibility: WhopSDK::Models::lesson_visibilities?,
        ?request_options: WhopSDK::request_opts
      ) -> WhopSDK::Lesson

      def list: (
        ?after: String?,
        ?before: String?,
        ?chapter_id: String?,
        ?course_id: String?,
        ?first: Integer?,
        ?last: Integer?,
        ?request_options: WhopSDK::request_opts
      ) -> WhopSDK::Internal::CursorPage[WhopSDK::Models::CourseLessonListResponse]

      def delete: (String id, ?request_options: WhopSDK::request_opts) -> bool

      def initialize: (client: WhopSDK::Client) -> void
    end
  end
end
