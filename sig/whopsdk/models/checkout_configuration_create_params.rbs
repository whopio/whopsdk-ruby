module Whopsdk
  module Models
    type checkout_configuration_create_params =
      {
        affiliate_code: String?,
        metadata: ::Hash[Symbol, top]?,
        plan: Whopsdk::CheckoutConfigurationCreateParams::Plan?,
        plan_id: String?,
        redirect_url: String?
      }
      & Whopsdk::Internal::Type::request_parameters

    class CheckoutConfigurationCreateParams < Whopsdk::Internal::Type::BaseModel
      extend Whopsdk::Internal::Type::RequestParameters::Converter
      include Whopsdk::Internal::Type::RequestParameters

      attr_accessor affiliate_code: String?

      attr_accessor metadata: ::Hash[Symbol, top]?

      attr_accessor plan: Whopsdk::CheckoutConfigurationCreateParams::Plan?

      attr_accessor plan_id: String?

      attr_accessor redirect_url: String?

      def initialize: (
        ?affiliate_code: String?,
        ?metadata: ::Hash[Symbol, top]?,
        ?plan: Whopsdk::CheckoutConfigurationCreateParams::Plan?,
        ?plan_id: String?,
        ?redirect_url: String?,
        ?request_options: Whopsdk::request_opts
      ) -> void

      def to_hash: -> {
        affiliate_code: String?,
        metadata: ::Hash[Symbol, top]?,
        plan: Whopsdk::CheckoutConfigurationCreateParams::Plan?,
        plan_id: String?,
        redirect_url: String?,
        request_options: Whopsdk::RequestOptions
      }

      type plan =
        {
          company_id: String,
          billing_period: Integer?,
          currency: Whopsdk::Models::currency?,
          custom_fields: ::Array[Whopsdk::CheckoutConfigurationCreateParams::Plan::CustomField]?,
          description: String?,
          expiration_days: Integer?,
          force_create_new_plan: bool?,
          image: Whopsdk::CheckoutConfigurationCreateParams::Plan::Image?,
          initial_price: Float?,
          internal_notes: String?,
          override_tax_type: Whopsdk::Models::tax_type?,
          plan_type: Whopsdk::Models::plan_type?,
          product_id: String?,
          release_method: Whopsdk::Models::release_method?,
          renewal_price: Float?,
          title: String?,
          trial_period_days: Integer?,
          visibility: Whopsdk::Models::visibility?
        }

      class Plan < Whopsdk::Internal::Type::BaseModel
        attr_accessor company_id: String

        attr_accessor billing_period: Integer?

        attr_accessor currency: Whopsdk::Models::currency?

        attr_accessor custom_fields: ::Array[Whopsdk::CheckoutConfigurationCreateParams::Plan::CustomField]?

        attr_accessor description: String?

        attr_accessor expiration_days: Integer?

        attr_accessor force_create_new_plan: bool?

        attr_accessor image: Whopsdk::CheckoutConfigurationCreateParams::Plan::Image?

        attr_accessor initial_price: Float?

        attr_accessor internal_notes: String?

        attr_accessor override_tax_type: Whopsdk::Models::tax_type?

        attr_accessor plan_type: Whopsdk::Models::plan_type?

        attr_accessor product_id: String?

        attr_accessor release_method: Whopsdk::Models::release_method?

        attr_accessor renewal_price: Float?

        attr_accessor title: String?

        attr_accessor trial_period_days: Integer?

        attr_accessor visibility: Whopsdk::Models::visibility?

        def initialize: (
          company_id: String,
          ?billing_period: Integer?,
          ?currency: Whopsdk::Models::currency?,
          ?custom_fields: ::Array[Whopsdk::CheckoutConfigurationCreateParams::Plan::CustomField]?,
          ?description: String?,
          ?expiration_days: Integer?,
          ?force_create_new_plan: bool?,
          ?image: Whopsdk::CheckoutConfigurationCreateParams::Plan::Image?,
          ?initial_price: Float?,
          ?internal_notes: String?,
          ?override_tax_type: Whopsdk::Models::tax_type?,
          ?plan_type: Whopsdk::Models::plan_type?,
          ?product_id: String?,
          ?release_method: Whopsdk::Models::release_method?,
          ?renewal_price: Float?,
          ?title: String?,
          ?trial_period_days: Integer?,
          ?visibility: Whopsdk::Models::visibility?
        ) -> void

        def to_hash: -> {
          company_id: String,
          billing_period: Integer?,
          currency: Whopsdk::Models::currency?,
          custom_fields: ::Array[Whopsdk::CheckoutConfigurationCreateParams::Plan::CustomField]?,
          description: String?,
          expiration_days: Integer?,
          force_create_new_plan: bool?,
          image: Whopsdk::CheckoutConfigurationCreateParams::Plan::Image?,
          initial_price: Float?,
          internal_notes: String?,
          override_tax_type: Whopsdk::Models::tax_type?,
          plan_type: Whopsdk::Models::plan_type?,
          product_id: String?,
          release_method: Whopsdk::Models::release_method?,
          renewal_price: Float?,
          title: String?,
          trial_period_days: Integer?,
          visibility: Whopsdk::Models::visibility?
        }

        type custom_field =
          {
            field_type: :text,
            name: String,
            id: String?,
            order: Integer?,
            placeholder: String?,
            required: bool?
          }

        class CustomField < Whopsdk::Internal::Type::BaseModel
          attr_accessor field_type: :text

          attr_accessor name: String

          attr_accessor id: String?

          attr_accessor order: Integer?

          attr_accessor placeholder: String?

          attr_accessor required: bool?

          def initialize: (
            name: String,
            ?id: String?,
            ?order: Integer?,
            ?placeholder: String?,
            ?required: bool?,
            ?field_type: :text
          ) -> void

          def to_hash: -> {
            field_type: :text,
            name: String,
            id: String?,
            order: Integer?,
            placeholder: String?,
            required: bool?
          }
        end

        type image = { id: String?, direct_upload_id: String? }

        class Image < Whopsdk::Internal::Type::BaseModel
          attr_accessor id: String?

          attr_accessor direct_upload_id: String?

          def initialize: (?id: String?, ?direct_upload_id: String?) -> void

          def to_hash: -> { id: String?, direct_upload_id: String? }
        end
      end
    end
  end
end
