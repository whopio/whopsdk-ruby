module Whopsdk
  module Models
    type forum_post_create_params =
      {
        experience_id: String,
        attachments: ::Array[Whopsdk::ForumPostCreateParams::Attachment]?,
        content: String?,
        is_mention: bool?,
        parent_id: String?,
        paywall_amount: Float?,
        paywall_currency: Whopsdk::Models::currency?,
        pinned: bool?,
        poll: Whopsdk::ForumPostCreateParams::Poll?,
        title: String?
      }
      & Whopsdk::Internal::Type::request_parameters

    class ForumPostCreateParams < Whopsdk::Internal::Type::BaseModel
      extend Whopsdk::Internal::Type::RequestParameters::Converter
      include Whopsdk::Internal::Type::RequestParameters

      attr_accessor experience_id: String

      attr_accessor attachments: ::Array[Whopsdk::ForumPostCreateParams::Attachment]?

      attr_accessor content: String?

      attr_accessor is_mention: bool?

      attr_accessor parent_id: String?

      attr_accessor paywall_amount: Float?

      attr_accessor paywall_currency: Whopsdk::Models::currency?

      attr_accessor pinned: bool?

      attr_accessor poll: Whopsdk::ForumPostCreateParams::Poll?

      attr_accessor title: String?

      def initialize: (
        experience_id: String,
        ?attachments: ::Array[Whopsdk::ForumPostCreateParams::Attachment]?,
        ?content: String?,
        ?is_mention: bool?,
        ?parent_id: String?,
        ?paywall_amount: Float?,
        ?paywall_currency: Whopsdk::Models::currency?,
        ?pinned: bool?,
        ?poll: Whopsdk::ForumPostCreateParams::Poll?,
        ?title: String?,
        ?request_options: Whopsdk::request_opts
      ) -> void

      def to_hash: -> {
        experience_id: String,
        attachments: ::Array[Whopsdk::ForumPostCreateParams::Attachment]?,
        content: String?,
        is_mention: bool?,
        parent_id: String?,
        paywall_amount: Float?,
        paywall_currency: Whopsdk::Models::currency?,
        pinned: bool?,
        poll: Whopsdk::ForumPostCreateParams::Poll?,
        title: String?,
        request_options: Whopsdk::RequestOptions
      }

      type attachment = { id: String?, direct_upload_id: String? }

      class Attachment < Whopsdk::Internal::Type::BaseModel
        attr_accessor id: String?

        attr_accessor direct_upload_id: String?

        def initialize: (?id: String?, ?direct_upload_id: String?) -> void

        def to_hash: -> { id: String?, direct_upload_id: String? }
      end

      type poll =
        { options: ::Array[Whopsdk::ForumPostCreateParams::Poll::Option] }

      class Poll < Whopsdk::Internal::Type::BaseModel
        attr_accessor options: ::Array[Whopsdk::ForumPostCreateParams::Poll::Option]

        def initialize: (
          options: ::Array[Whopsdk::ForumPostCreateParams::Poll::Option]
        ) -> void

        def to_hash: -> {
          options: ::Array[Whopsdk::ForumPostCreateParams::Poll::Option]
        }

        type option = { id: String, text: String }

        class Option < Whopsdk::Internal::Type::BaseModel
          attr_accessor id: String

          attr_accessor text: String

          def initialize: (id: String, text: String) -> void

          def to_hash: -> { id: String, text: String }
        end
      end
    end
  end
end
