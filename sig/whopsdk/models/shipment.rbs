module Whopsdk
  module Models
    type shipment =
      {
        id: String,
        carrier: Whopsdk::Models::shipment_carrier,
        created_at: Time,
        delivery_estimate: Time?,
        payment: Whopsdk::Shipment::Payment,
        service: String?,
        status: Whopsdk::Models::shipment_status,
        substatus: Whopsdk::Models::shipment_substatus?,
        tracking_code: String,
        updated_at: Time
      }

    class Shipment < Whopsdk::Internal::Type::BaseModel
      attr_accessor id: String

      attr_accessor carrier: Whopsdk::Models::shipment_carrier

      attr_accessor created_at: Time

      attr_accessor delivery_estimate: Time?

      attr_accessor payment: Whopsdk::Shipment::Payment

      attr_accessor service: String?

      attr_accessor status: Whopsdk::Models::shipment_status

      attr_accessor substatus: Whopsdk::Models::shipment_substatus?

      attr_accessor tracking_code: String

      attr_accessor updated_at: Time

      def initialize: (
        id: String,
        carrier: Whopsdk::Models::shipment_carrier,
        created_at: Time,
        delivery_estimate: Time?,
        payment: Whopsdk::Shipment::Payment,
        service: String?,
        status: Whopsdk::Models::shipment_status,
        substatus: Whopsdk::Models::shipment_substatus?,
        tracking_code: String,
        updated_at: Time
      ) -> void

      def to_hash: -> {
        id: String,
        carrier: Whopsdk::Models::shipment_carrier,
        created_at: Time,
        delivery_estimate: Time?,
        payment: Whopsdk::Shipment::Payment,
        service: String?,
        status: Whopsdk::Models::shipment_status,
        substatus: Whopsdk::Models::shipment_substatus?,
        tracking_code: String,
        updated_at: Time
      }

      type payment = { id: String }

      class Payment < Whopsdk::Internal::Type::BaseModel
        attr_accessor id: String

        def initialize: (id: String) -> void

        def to_hash: -> { id: String }
      end
    end
  end
end
